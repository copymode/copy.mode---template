// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import { Database } from '@/types/supabase';

// Log para depuração
console.log("[Supabase Client] Raw import.meta.env:", import.meta.env);
console.log("[Supabase Client] VITE_SUPABASE_URL:", import.meta.env.VITE_SUPABASE_URL);
console.log("[Supabase Client] VITE_SUPABASE_ANON_KEY:", import.meta.env.VITE_SUPABASE_ANON_KEY);

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY;

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Tipando o cliente com <Database>
export const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey, {
  auth: {
    persistSession: true,
    detectSessionInUrl: true
  },
  global: {
    fetch: (url, options) => {
      console.log('Supabase Fetch Request:', url);
      return fetch(url, options);
    }
  }
});

// Log supabase configuration for debugging
console.log('Supabase Client Configured:', {
  url: supabaseUrl,
  hasKey: !!supabaseAnonKey
});

// Add TypeScript support for RPC functions
declare module '@supabase/supabase-js' {
  interface SupabaseClient {
    rpc<T = any>(
      fn: SupabaseRPC.AvailableFunctions,
      params?: object,
      options?: any
    ): any;
  }
}
